package dummy;

import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;
import static com.github.tomakehurst.wiremock.client.WireMock.equalToXml;
import static com.github.tomakehurst.wiremock.client.WireMock.get;
import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;

import com.github.tomakehurst.wiremock.junit.WireMockRule;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;

public class StubJavaProgram {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		WireMockRule rule=new WireMockRule(8090);
		
		rule.start();
		rule.stubFor(get(urlEqualTo("/an/endpoint2"))
    			.withRequestBody(equalToXml("<message>Hello World!</message>"))			
    			.willReturn(aResponse().withHeader("Content-Type", "text/xml")
    			.withStatus(200)
    			.withBodyFile("json/Response.xml")));
		RestAssured.baseURI="http://localhost:8090/";
    	RequestSpecification req = RestAssured.given().header("Content-type", "text/xml").and()
				.body("<message>Hello World!</message>");
    Response res=req.given().get("an/endpoint2");
    System.out.println(res.asString());
 
    rule.stop();
	}

}
